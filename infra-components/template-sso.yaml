apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: sso
  application: ${APPLICATION_NAME}
message: This is a template to provision sso.
metadata:
  name: sso
  annotations:
    description: "sso template"
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: sso75-openshift-rhel8
  spec:
    lookupPolicy:
      local: true
    tags:
    - annotations:
        description: Red Hat Single Sign-On 7.5 image
      from:
        kind: DockerImage
        name: registry.redhat.io/rh-sso-7/sso75-openshift-rhel8:7.5
      name: latest
      referencePolicy:
        type: Local
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${APPLICATION_NAME}
  data:
    sso-hostname: ${SSO_HOSTNAME}
    db-jndi: ${DB_JNDI}
    db-min-pool-size: ${DB_MIN_POOL_SIZE}
    db-max-pool-size: ${DB_MAX_POOL_SIZE}
    db-tx-isolation: ${DB_TX_ISOLATION}
    sso-postgresql-service-host: ${SSO_POSTGRESQL_SERVICE_HOST}
    sso-postgresql-service-port: ${SSO_POSTGRESQL_SERVICE_PORT}
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${APPLICATION_NAME}
  data:
    database-username: ${DATABASE_USERNAME}
    database-password: ${DATABASE_PASSWORD}
    database-name: ${DATABASE_NAME}
    sso-admin-username: ${SSO_ADMIN_USERNAME}
    sso-admin-password: ${SSO_ADMIN_PASSWORD}
    https-password: ${HTTPS_PASSWORD}
    jgroups-cluster-password: ${JGROUPS_CLUSTER_PASSWORD}
    sso-truststore-password: ${SSO_TRUSTSTORE_PASSWORD}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
        annotations:
          alpha.image.policy.openshift.io/resolve-names: '*'
      spec:
        volumes:
          - name: eap-keystore-volume
            secret:
              secretName: ${HTTPS_SECRET}
          - name: eap-jgroups-keystore-volume
            secret:
              secretName: ${JGROUPS_ENCRYPT_SECRET}
          - name: sso-truststore-volume
            secret:
              secretName: ${SSO_TRUSTSTORE_SECRET}
        containers:
          - name: sso
            image: sso75-openshift-rhel8:latest
            env:
              - name: SSO_HOSTNAME
                valueFrom:
                  configMapKeyRef:
                    name: ${APPLICATION_NAME}
                    key: sso-hostname
              - name: DB_SERVICE_PREFIX_MAPPING
                value: sso-postgresql=DB
              - name: SSO_POSTGRESQL_SERVICE_HOST
                valueFrom:
                  configMapKeyRef:
                    name: ${APPLICATION_NAME}
                    key: sso-postgresql-service-host
              - name: SSO_POSTGRESQL_SERVICE_PORT
                valueFrom:
                  configMapKeyRef:
                    name: ${APPLICATION_NAME}
                    key: sso-postgresql-service-port
              - name: DB_JNDI
                valueFrom:
                  configMapKeyRef:
                    name: ${APPLICATION_NAME}
                    key: db-jndi
              - name: DB_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: database-username
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: database-password
              - name: DB_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: database-name
              - name: TX_DATABASE_PREFIX_MAPPING
                value: sso-postgresql=DB
              - name: DB_MIN_POOL_SIZE
                valueFrom:
                  configMapKeyRef:
                    name: ${APPLICATION_NAME}
                    key: db-min-pool-size
              - name: DB_MAX_POOL_SIZE
                valueFrom:
                  configMapKeyRef:
                    name: ${APPLICATION_NAME}
                    key: db-max-pool-size
              - name: DB_TX_ISOLATION
                valueFrom:
                  configMapKeyRef:
                    name: ${APPLICATION_NAME}
                    key: db-tx-isolation
              - name: JGROUPS_PING_PROTOCOL
                value: dns.DNS_PING
              - name: OPENSHIFT_DNS_PING_SERVICE_NAME
                value: ${APPLICATION_NAME}-ping
              - name: OPENSHIFT_DNS_PING_SERVICE_PORT
                value: "8888"
              - name: HTTPS_KEYSTORE_DIR
                value: /etc/eap-secret-volume
              - name: HTTPS_KEYSTORE
                value: ${HTTPS_KEYSTORE}
              - name: HTTPS_KEYSTORE_TYPE
                value: ${HTTPS_KEYSTORE_TYPE}
              - name: HTTPS_NAME
                value: ${HTTPS_NAME}
              - name: HTTPS_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: https-password
              - name: JGROUPS_ENCRYPT_SECRET
                value: ${JGROUPS_ENCRYPT_SECRET}
              - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
                value: /etc/jgroups-encrypt-secret-volume
              - name: JGROUPS_ENCRYPT_KEYSTORE
                value: ${JGROUPS_ENCRYPT_KEYSTORE}
              - name: JGROUPS_ENCRYPT_NAME
                value: ${JGROUPS_ENCRYPT_NAME}
              - name: JGROUPS_ENCRYPT_PASSWORD
                value: ${JGROUPS_ENCRYPT_PASSWORD}
              - name: JGROUPS_CLUSTER_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: jgroups-cluster-password
              - name: SSO_ADMIN_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: sso-admin-username
              - name: SSO_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: sso-admin-password
              - name: SSO_TRUSTSTORE
                value: ${SSO_TRUSTSTORE}
              - name: SSO_TRUSTSTORE_DIR
                value: /etc/sso-secret-volume
              - name: SSO_TRUSTSTORE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: sso-truststore-password
            ports:
              - name: jolokia
                containerPort: 8778
                protocol: TCP
              - name: http
                containerPort: 8080
                protocol: TCP
              - name: https
                containerPort: 8443
                protocol: TCP
              - name: ping
                containerPort: 8888
                protocol: TCP
            resources:
              limits:
                memory: ${MEMORY_LIMIT}
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: eap-keystore-volume
                mountPath: /etc/eap-secret-volume
                readOnly: true
              - name: eap-jgroups-keystore-volume
                mountPath: /etc/jgroups-encrypt-secret-volume
                readOnly: true
              - name: sso-truststore-volume
                mountPath: /etc/sso-secret-volume
                readOnly: true
            livenessProbe:
              exec:
                command:
                - "/bin/bash"
                - "-c"
                - "/opt/eap/bin/livenessProbe.sh"
              initialDelaySeconds: 120
            readinessProbe:
              exec:
                command:
                - "/bin/bash"
                - "-c"
                - "/opt/eap/bin/readinessProbe.sh"
        restartPolicy: Always
        terminationGracePeriodSeconds: 75
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
    strategy:
      type: Recreate
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
- apiVersion: v1
  kind: Service
  metadata:
    name: secure-${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
    annotations:
      description: The web server's https port.
  spec:
    ports:
      - port: 8443
        targetPort: 8443
    selector:
      app: ${APPLICATION_NAME}
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
    annotations:
      description: The web server's http port.
  spec:
    ports:
      - port: 8080
        targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}-ping
    labels:
      app: ${APPLICATION_NAME}
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      description: "The JGroups ping port for clustering"
  spec:
    publishNotReadyAddresses: true
    clusterIP: None
    ports:
      - name: ping
        port: 8888
    selector:
      app: ${APPLICATION_NAME}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: secure-${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    to:
      name: secure-${APPLICATION_NAME}
      insecureEdgeTerminationPolicy: Redirect
    tls:
      termination: passthrough
parameters:
- displayName: Application Name
  description: The name for the application.
  name: APPLICATION_NAME
  value: sso
  required: true
- displayName: Custom RH-SSO Server Hostname
  description: Custom hostname for the RH-SSO server.
  name: SSO_HOSTNAME
  value: ''
  required: false
- displayName: Database JNDI Name
  description: Database JNDI name used by application to resolve the datasource, e.g.
    java:/jboss/datasources/postgresql
  name: DB_JNDI
  value: "java:jboss/datasources/KeycloakDS"
  required: false
- displayName: Custom http Route Hostname
  description: 'Custom hostname for http service route. Leave blank for default hostname,
    e.g.: <application-name>.<project>.<default-domain-suffix>'
  name: HOSTNAME_HTTP
  value: ''
  required: false
- displayName: Custom https Route Hostname
  description: 'Custom hostname for https service route. Leave blank for default hostname,
    e.g.: <application-name>.<project>.<default-domain-suffix>'
  name: HOSTNAME_HTTPS
  value: ''
  required: false
- displayName: Datasource Minimum Pool Size
  description: Sets xa-pool/min-pool-size for the configured datasource.
  name: DB_MIN_POOL_SIZE
  value: ''
  required: false
- displayName: Datasource Maximum Pool Size
  description: Sets xa-pool/max-pool-size for the configured datasource.
  name: DB_MAX_POOL_SIZE
  value: ''
  required: false
- displayName: Datasource Transaction Isolation
  description: Sets transaction-isolation for the configured datasource.
  name: DB_TX_ISOLATION
  value: ''
  required: false
- displayName: Server Keystore Filename
  description: The name of the keystore file within the secret
  name: HTTPS_KEYSTORE
  value: keystore.jks
  required: false
- displayName: Server Keystore Type
  description: The type of the keystore file (JKS or JCEKS)
  name: HTTPS_KEYSTORE_TYPE
  value: ''
  required: false
- displayName: Server Certificate Name
  description: The name associated with the server certificate (e.g. jboss)
  name: HTTPS_NAME
  value: jboss
  required: false
- displayName: Server Keystore Password
  description: The password for the keystore and certificate (e.g. mykeystorepass)
  name: HTTPS_PASSWORD
  value: 'cGFzc3dvcmQ='
  required: false
- displayName: JGroups Secret Name
  description: The name of the secret containing the keystore file
  name: JGROUPS_ENCRYPT_SECRET
  value: sso-app-secret
  required: false
- displayName: Server Keystore Secret Name
  description: The name of the secret containing the keystore file
  name: HTTPS_SECRET
  value: sso-app-secret
  required: false
- displayName: JGroups Keystore Filename
  description: The name of the keystore file within the secret
  name: JGROUPS_ENCRYPT_KEYSTORE
  value: jgroups.jceks
  required: false
- displayName: JGroups Certificate Name
  description: The name associated with the server certificate (e.g. secret-key)
  name: JGROUPS_ENCRYPT_NAME
  value: secret-key
  required: false
- displayName: JGroups Keystore Password
  description: The password for the keystore and certificate (e.g. password)
  name: JGROUPS_ENCRYPT_PASSWORD
  value: password
  required: false
- displayName: JGroups Cluster Password
  description: JGroups cluster password
  name: JGROUPS_CLUSTER_PASSWORD
  value: 'amdyb3Vwc3Bhc3N3b3Jk'
  required: true
- displayName: RH-SSO Trust Store
  description: The name of the truststore file within the secret (e.g. truststore.jks)
  name: SSO_TRUSTSTORE
  value: truststore.jks
  required: false
- displayName: RH-SSO Trust Store Password
  description: The password for the truststore and certificate (e.g. mykeystorepass)
  name: SSO_TRUSTSTORE_PASSWORD
  value: 'cGFzc3dvcmQ='
  required: false
- displayName: Container Memory Limit
  description: Container memory limit.
  name: MEMORY_LIMIT
  value: 1Gi
  required: false
- displayName: RH-SSO Trust Store Secret
  description: The name of the secret containing the truststore file (e.g. truststore-secret).
    Used for volume secretName
  name: SSO_TRUSTSTORE_SECRET
  value: sso-app-secret"
  required: false
- displayName: RH-SSO Administrator Username
  description: RH-SSO Server administrator username
  name: SSO_ADMIN_USERNAME
  value: 'YWRtaW4='
  required: true
- displayName: RH-SSO Administrator Password
  description: RH-SSO Server administrator password
  name: SSO_ADMIN_PASSWORD
  value: 'cmVkaGF0'
  required: true
- description: Defines the username for the datasource
  name: DATABASE_USERNAME
  value: 'c3Nv'
  required: false
- description: Defines the password for the datasource
  name: DATABASE_PASSWORD
  value: 'c3Nv'
  required: false
- description: Defines the database name for the datasource
  name: DATABASE_NAME
  value: 'c3Nv'
  required: false
- description: Defines the database server’s host name or IP address to be used in the datasource’s connection-url property
  name: SSO_POSTGRESQL_SERVICE_HOST
  value: postgresql
  required: false
- description: Defines the database server’s port for the datasource
  name: SSO_POSTGRESQL_SERVICE_PORT
  value: '5432'
  required: false
