apiVersion: v1
kind: Service
metadata:
  name: quarkus-order-logger
  labels:
    app: quarkus-order-logger
  annotations:
    prometheus.io/scrape_port: '8080'
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/q/metrics/'
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: quarkus-order-logger
  type: ClusterIP
  sessionAffinity: None
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: quarkus-order-logger
  labels:
    app: quarkus-order-logger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quarkus-order-logger
  template:
    metadata:
      labels:
        app: quarkus-order-logger
    spec:
      containers:
        - resources: {}
          name: quarkus-order-logger
          env:
            - name: QUARKUS_LOG_LEVEL
              value: INFO
            - name: QUARKUS_LOG_FILE_PATH
              value: /tmp/quarkus.log
            - name: TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: quarkus-order-logger
                  key: telegram-token
            - name: TELEGRAM_CHATID
              valueFrom:
                secretKeyRef:
                  name: quarkus-order-logger
                  key: telegram-chatid
            - name: TELEGRAM_ENABLED
              value: 'false'
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: quarkus-order-logger
                  key: kafka-bootstrap-servers
            - name: KAFKA_SECURITY_PROTOCOL
              valueFrom:
                configMapKeyRef:
                  name: quarkus-order-logger
                  key: security-protocol
            - name: KAFKA_SASL_JAAS_CONFIG
              valueFrom:
                secretKeyRef:
                  name: quarkus-order-logger
                  key: sasl-jaas-config
            - name: KAFKA_SASL_MECHANISM
              valueFrom:
                configMapKeyRef:
                  name: quarkus-order-logger
                  key: sasl-jaas-mechanism
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
          imagePullPolicy: Always
          image: quay.io/gmagnotta/quarkus-order-logger
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
