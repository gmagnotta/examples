apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: eap74-openjdk11-openshift-rhel8
spec:
  lookupPolicy:
    local: true
  tags:
  - annotations:
      description: Red Hat JBoss EAP 7 Image
    from:
      kind: DockerImage
      name: registry.redhat.io/jboss-eap-7/eap74-openjdk11-openshift-rhel8:7.4.5
    name: latest
    referencePolicy:
      type: Local
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: jboss-eap-test
spec:
  lookupPolicy:
    local: true
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: flyway
spec:
  lookupPolicy:
    local: true
  tags:
  - annotations:
      description: Flyway
    from:
      kind: DockerImage
      name: quay.io/gmagnotta/flyway
    name: latest
    referencePolicy:
      type: Local
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: jboss-eap-test-migration
spec:
  lookupPolicy:
    local: true
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: jboss-eap-test
  labels:
    application: jboss-eap-test
spec:
  resources: {}
  source:
    type: Git
    git:
      ref: master
      uri: 'https://github.com/gmagnotta/examples'
    contextDir: jboss-eap-test
  strategy:
    type: Source
    sourceStrategy:
      env:
        - name: VARIABLE
          value: 'value'
      forcePull: true
      incremental: true
      from:
        kind: ImageStreamTag
        name: 'eap74-openjdk11-openshift-rhel8:latest'
  postCommit: {}
  runPolicy: Serial
  output:
    to:
      kind: ImageStreamTag
      name: 'jboss-eap-test:latest'
  triggers: []
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: jboss-eap-test-migrate
  labels:
    application: jboss-eap-test-migrate
spec:
  resources: {}
  source:
    type: Git
    git:
      ref: master
      uri: 'https://github.com/gmagnotta/examples'
    contextDir: jboss-eap-test/src/main/resources/db
  strategy:
    type: Source
    sourceStrategy:
      env:
        - name: CONTEXT
          value: 'jboss-eap-test/src/main/resources/db'
      forcePull: true
      incremental: false
      from:
        kind: ImageStreamTag
        name: 'flyway:latest'
  postCommit: {}
  runPolicy: Serial
  output:
    to:
      kind: ImageStreamTag
      name: 'jboss-eap-test-migration:latest'
  triggers: []
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: jboss-eap-test-pipelineconfig
data:
  release-image-path: 'quay.io/gmagnotta/jboss-eap-test'
  release-image-path-migration: 'quay.io/gmagnotta/jboss-eap-test-migration'
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: jboss-eap-test-dev-pipeline
spec:
  workspaces:
    - name: template
    - name: template-migrate
  tasks:
    - name: build
      taskRef:
        name: s2i-startbuild-cli
      params:
        - name: BUILDCONFIG-NAME
          value: "jboss-eap-test"
    - name: build-migrate
      taskRef:
        name: s2i-startbuild-cli
      params:
        - name: BUILDCONFIG-NAME
          value: "jboss-eap-test-migrate"
    - name: migrate
      taskRef:
        name: openshift-actions
      runAfter:
        - build
        - build-migrate
      workspaces:
        - name: source
          workspace: template-migrate
      params:
        - name: SCRIPT
          value: |
            oc process -p MIGRATION_IMAGE=$(tasks.build-migrate.results.VALUE) -f $(workspaces.source.path)/jboss-eap-test-migration.yaml | oc apply -f -
    - name: deploy
      taskRef:
        name: openshift-actions
      runAfter:
        - build
        - build-migrate
      workspaces:
        - name: source
          workspace: template
      params:
        - name: SCRIPT
          value: |
            oc process -p IMAGE=$(tasks.build.results.VALUE) -p MIGRATION_IMAGE=$(tasks.build-migrate.results.VALUE) -p CAUSE="deployment" -f $(workspaces.source.path)/jboss-eap-test-template.yaml | oc apply -f -
    - name: update-built-image
      taskRef:
        name: set-configmap-value
      runAfter:
        - deploy
        - migrate
      params:
        - name: CONFIGMAP-NAME
          value: "jboss-eap-test-pipelineconfig"
        - name: CONFIGMAP-KEY
          value: "dev-latest-built-image"
        - name: VALUE
          value: $(tasks.build.results.VALUE)
    - name: update-migrate-image
      taskRef:
        name: set-configmap-value
      runAfter:
        - deploy
        - migrate
      params:
        - name: CONFIGMAP-NAME
          value: "jboss-eap-test-pipelineconfig"
        - name: CONFIGMAP-KEY
          value: "dev-latest-migration-image"
        - name: VALUE
          value: $(tasks.build-migrate.results.VALUE)
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: jboss-eap-test-release-pipeline
spec:
  params:
    - name: image-tag
  workspaces:
    - name: empty
  tasks:
    - name: get-image-built
      taskRef:
        name: get-configmap-value
      params:
        - name: CONFIGMAP-NAME
          value: "jboss-eap-test-pipelineconfig"
        - name: CONFIGMAP-KEY
          value: "dev-latest-built-image"
    - name: getpushpath
      taskRef:
        name: get-configmap-value
      params:
        - name: CONFIGMAP-NAME
          value: "jboss-eap-test-pipelineconfig"
        - name: CONFIGMAP-KEY
          value: "release-image-path"
    - name: get-image-built-migration
      taskRef:
        name: get-configmap-value
      params:
        - name: CONFIGMAP-NAME
          value: "jboss-eap-test-pipelineconfig"
        - name: CONFIGMAP-KEY
          value: "dev-latest-migration-image"
    - name: getpushpath-migration
      taskRef:
        name: get-configmap-value
      params:
        - name: CONFIGMAP-NAME
          value: "jboss-eap-test-pipelineconfig"
        - name: CONFIGMAP-KEY
          value: "release-image-path-migration"
    - name: copy
      taskRef:
        name: skopeo-copy
        kind: ClusterTask
      runAfter:
        - getpushpath
        - get-image-built
      workspaces:
        - name: images-url
          workspace: empty
      params:
        - name: srcImageURL
          value: "docker://$(tasks.get-image-built.results.VALUE)"
        - name: destImageURL
          value: "docker://$(tasks.getpushpath.results.VALUE):$(params.image-tag)"
        - name: srcTLSverify
          value: "false"
        - name: destTLSverify
          value: "false"
    - name: copy-migration
      taskRef:
        name: skopeo-copy
        kind: ClusterTask
      runAfter:
        - getpushpath-migration
        - get-image-built-migration
      workspaces:
        - name: images-url
          workspace: empty
      params:
        - name: srcImageURL
          value: "docker://$(tasks.get-image-built-migration.results.VALUE)"
        - name: destImageURL
          value: "docker://$(tasks.getpushpath-migration.results.VALUE):$(params.image-tag)"
        - name: srcTLSverify
          value: "false"
        - name: destTLSverify
          value: "false"