apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: jboss-eap
  application: "${APPLICATION_NAME}"
message: This is an OpenShift template to deploy jboss-eap based applications.
metadata:
  name: jboss-eap
  annotations:
    description: "jboss-eap Template"
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: "${APPLICATION_NAME}"
  data:
    database-username: amJvc3M=
    database-password: amJvc3M=
    database-database: amJvc3M=
    sso-public-key: ${SSO_PUBLIC_KEY}
    sso-username: ''
    sso-password: ''
    sso-secret: ${SSO_SECRET}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: "${APPLICATION_NAME}"
  data:
    ENABLE_GENERATE_DEFAULT_DATASOURCE: 'false'
    DB_SERVICE_PREFIX_MAPPING: 'ocp-postgresql=DS1'
    OCP_POSTGRESQL_SERVICE_HOST: 'postgresql'
    OCP_POSTGRESQL_SERVICE_PORT: '5432'
    DS1_CONNECTION_CHECKER: 'org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker'
    DS1_DRIVER: 'postgresql'
    DS1_EXCEPTION_SORTER: 'org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter'
    DS1_MAX_POOL_SIZE: '20'
    DS1_MIN_POOL_SIZE: '20'
    DS1_NONXA: 'true'
    MIGRATION_JDBC: 'jdbc:postgresql://postgresql:5432/sample'
    AB_PROMETHEUS_ENABLE: 'true'
    sso-url: ${SSO_URL}
    sso-realm: ${SSO_REALM}
    sso-client: "${APPLICATION_NAME}"
    sso-disable-ssl-certificate-validation: 'false'
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
        annotations:
          kubernetes.io/change-cause: ${CAUSE}
          gitcommit: ${CAUSE}
      spec:
        containers:
          - name: jboss-eap
            image: ${IMAGE}
            env:
              - name: JGROUPS_PING_PROTOCOL
                value: "dns.DNS_PING"
              - name: OPENSHIFT_DNS_PING_SERVICE_NAME
                value: "${APPLICATION_NAME}-ping"
              - name: OPENSHIFT_DNS_PING_SERVICE_PORT
                value: "8888"
              - name: JGROUPS_CLUSTER_PASSWORD
                value: "${JGROUPS_CLUSTER_PASSWORD}"
              - name: AUTO_DEPLOY_EXPLODED
                value: "${AUTO_DEPLOY_EXPLODED}"
              - name: MQ_QUEUES
                value: "${MQ_QUEUES}"
              - name: MQ_TOPICS
                value: "${MQ_TOPICS}"
              - name: MQ_CLUSTER_PASSWORD
                value: "${MQ_CLUSTER_PASSWORD}"
              - name: DS1_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: database-database
              - name: DS1_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: database-username
              - name: DS1_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: database-password
              - name: SSO_URL
                valueFrom:
                  configMapKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: sso-url
              - name: SSO_REALM
                valueFrom:
                  configMapKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: sso-realm
              - name: SSO_PUBLIC_KEY
                valueFrom:
                  secretKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: sso-public-key
              - name: SSO_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: sso-username
              - name: SSO_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: sso-password
              - name: SSO_BEARER_ONLY
                value: "false"
              - name: SSO_CLIENT
                valueFrom:
                  configMapKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: sso-client
              - name: SSO_ENABLE_CORS
                value: "false"
              - name: SSO_SECRET
                valueFrom:
                  secretKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: sso-secret
              - name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
                valueFrom:
                  configMapKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: sso-disable-ssl-certificate-validation
            envFrom:
            - configMapRef:
                name: "${APPLICATION_NAME}"
            livenessProbe:
              exec:
                command:
                - "/bin/bash"
                - "-c"
                - "/opt/eap/bin/livenessProbe.sh"
              initialDelaySeconds: 60
            readinessProbe:
              exec:
                command:
                - "/bin/bash"
                - "-c"
                - "/opt/eap/bin/readinessProbe.sh"
              initialDelaySeconds: 10
            ports:
              - containerPort: 8080
                protocol: TCP
              - containerPort: 8778
                protocol: TCP
              - containerPort: 8888
                protocol: TCP
              - containerPort: 9799
                protocol: TCP
            resources:
              requests:
                cpu: "500m"
                memory: "128Mi"
              limits:
                cpu: "1000m"
                memory: "${MEMORY_LIMIT}"
            imagePullPolicy: IfNotPresent
        initContainers:
          - name: "${APPLICATION_NAME}-wait-migration"
            image: ${MIGRATION_IMAGE}
            env:
              - name: FLYWAY_URL
                valueFrom:
                  configMapKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: MIGRATION_JDBC
              - name: FLYWAY_USER
                valueFrom:
                  secretKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: database-username
              - name: FLYWAY_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: "${APPLICATION_NAME}"
                    key: database-password
              - name: FLYWAY_PARAMS
                value: 'validate'
        restartPolicy: Always
        terminationGracePeriodSeconds: 75
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
    strategy:
      type: Recreate
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
- apiVersion: v1
  kind: Service
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    ports:
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: 9799-tcp
        protocol: TCP
        port: 9799
        targetPort: 9799
    selector:
      app: "${APPLICATION_NAME}"
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    name: "${APPLICATION_NAME}-ping"
    labels:
      app: "${APPLICATION_NAME}"
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: true
      description: "The JGroups ping port for clustering"
  spec:
    publishNotReadyAddresses: true
    clusterIP: None
    ports:
      - name: 8888-tcp
        protocol: TCP
        port: 8888
        targetPort: 8888
    selector:
      app: "${APPLICATION_NAME}"
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 8080-tcp
    wildcardPolicy: None
parameters:
- displayName: Application Name
  description: The name for the application.
  name: APPLICATION_NAME
  value: jboss-eap
  required: true
- description: Container image to use
  name: IMAGE
  required: true
- description: Container image to use for migration
  name: MIGRATION_IMAGE
  required: true
- description: Description of this deployment
  name: CAUSE
- description: Memory Limit
  name: MEMORY_LIMIT
  value: "1Gi"
  required: false
- description: JGroups cluster password
  name: JGROUPS_CLUSTER_PASSWORD
  from: "[a-zA-Z0-9]{8}"
  generate: expression
  required: true
- description: Auto Deploy exploded
  name: AUTO_DEPLOY_EXPLODED
  value: "false"
  required: false
- description: Queue names, separated by commas. These queues will be automatically created when the broker starts. Also, they will be made accessible as JNDI resources in EAP. Note that all queues used by the application *must* be specified here in order to be created automatically on the remote AMQ broker.
  name: MQ_QUEUES
  value: ""
  required: false
- description: Topic names, separated by commas. These topics will be automatically created when the broker starts. Also, they will be made accessible as JNDI resources in EAP. Note that all topics used by the application *must* be specified here in order to be created automatically on the remote AMQ broker.
  name: MQ_TOPICS
  value: ""
  required: false
- description: AMQ cluster admin password
  name: MQ_CLUSTER_PASSWORD
  value: "mqpassword"
  required: false
- description: SSO Realm
  name: SSO_REALM
  value: "ZGVtbw=="
  required: false
- description: SSO Secret
  name: SSO_SECRET
  value: "cGFzc3dvcmQ="
  required: false
- description: SSO URL
  name: SSO_URL
  value: "http://localhost/auth"
  required: false
- description: SSO Public Key
  name: SSO_PUBLIC_KEY
  value: ""
  required: false