kind: Deployment
apiVersion: apps/v1
metadata:
  name: quarkus-order-logger
  labels:
    app: quarkus-order-logger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quarkus-order-logger
  template:
    metadata:
      labels:
        app: quarkus-order-logger
    spec:
      containers:
        - resources: {}
          name: quarkus-order-logger
          env:
            - name: quarkus_artemis_url
              valueFrom:
                configMapKeyRef:
                  name: quarkus-order-logger
                  key: amq-broker
            - name: quarkus_artemis_username
              valueFrom:
                secretKeyRef:
                  name: jboss-eap
                  key: mq-username
            - name: quarkus_artemis_password
              valueFrom:
                secretKeyRef:
                  name: jboss-eap
                  key: mq-password
            - name: quarkus_log_level
              value: INFO
            - name: quarkus_log_file_path
              value: /tmp/quarkus.log
            - name: TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: quarkus-order-logger
                  key: telegram-token
            - name: TELEGRAM_CHATID
              valueFrom:
                secretKeyRef:
                  name: quarkus-order-logger
                  key: telegram-chatid
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
          imagePullPolicy: IfNotPresent
          image: quay.io/gmagnotta/quarkus-order-logger
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
