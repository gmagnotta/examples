apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: datagrid
  application: ${APPLICATION_NAME}
message: This is a template to provision datagrid
metadata:
  name: datagrid
  annotations:
    description: "datagrid template"
objects:
- apiVersion: v1
  data:
    config.yaml: |
      infinispan:
        authorization:
          enabled: true
          roleMapper: cluster
        clusterName: infinispan
        zeroCapacityNode: false
        locks:
          owners: -1
          reliability: consistent
      endpoints:
        dedicatedAdmin: false
        auth: true
        clientCert: none # none | validate | authenticate
        hotrod:
          enabled: true
          qop: auth
          serverName: infinispan
        memcached:
          enabled: false
        rest:
          enabled: true
      jgroups:
        diagnostics: false
        encrypt: false
        transport: tcp
        bindPort: 7800
        dnsPing:
          query: "datagrid-nodes.dg.svc.cluster.local"
          address: "172.30.0.10"
          recordType: A
        relay:
          bindPort: 7900
      keystore:
        alias: server
        selfSignCert: false
        type: pkcs12
      xsite:
        masterCandidate: true
        maxSiteMasters: 1
        transport: tcp

      logging:
        console:
          level: trace
          pattern: '%d{HH:mm:ss,SSS} %-5p (%t) [%c] %m%throwable%n'
        file:
          level: trace
          path: '${sys:infinispan.server.log.path}/server.log'
          pattern: '%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p (%t) [%c] %m%throwable%n'
        categories:
          com.arjuna: warn
          org.infinispan: info
          org.jgroups: warn
          # No need to warn about not being able to TLS/SSL handshake
          io.netty.handler.ssl.ApplicationProtocolNegotiationHandler: error
  kind: ConfigMap
  metadata:
    name: config
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${APPLICATION_NAME}
  data:
    user: ${USER}
    password: ${PASSWORD}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
        annotations:
          alpha.image.policy.openshift.io/resolve-names: '*'
      spec:
        containers:
          - name: datagrid
            image: datagrid-8-rhel8:latest
            ports:
              - containerPort: 11221
                protocol: TCP
              - containerPort: 11222
                protocol: TCP
              - containerPort: 2157
                protocol: TCP
              - containerPort: 47500
                protocol: TCP
              - containerPort: 57600
                protocol: TCP
              - containerPort: 7800
                protocol: TCP
            env:
              - name: CONFIG_PATH
                value: '/opt/infinispan/server/conf/config.yaml'
              - name: USER
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: user
              - name: PASS
                valueFrom:
                  secretKeyRef:
                    name: ${APPLICATION_NAME}
                    key: password
            resources:
              requests:
                cpu: "500m"
                memory: "128Mi"
              limits:
                cpu: "1000m"
                memory: "1Gi"
            imagePullPolicy: Always
            volumeMounts:
              - name: config
                mountPath: /opt/infinispan/server/conf/config.yaml
                subPath: config.yaml
        volumes:
          - name: config
            configMap:
              name: config
              items:
                - key: config.yaml
                  path: config.yaml
        restartPolicy: Always
        terminationGracePeriodSeconds: 60
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    ports:
      - name: 11222-tcp
        protocol: TCP
        port: 11222
        targetPort: 11222
    selector:
      app: ${APPLICATION_NAME}
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}-nodes
    labels:
      app: ${APPLICATION_NAME}-nodes
  spec:
    publishNotReadyAddresses: true
    clusterIP: None
    ports:
      - name: 11221-tcp
        protocol: TCP
        port: 11221
        targetPort: 11221
      - name: 11222-tcp
        protocol: TCP
        port: 11222
        targetPort: 11222
      - name: 2157-tcp
        protocol: TCP
        port: 2157
        targetPort: 2157
      - name: 47500-tcp
        protocol: TCP
        port: 47500
        targetPort: 47500
      - name: 57600-tcp
        protocol: TCP
        port: 57600
        targetPort: 57600
      - name: 7800-tcp
        protocol: TCP
        port: 7800
        targetPort: 7800
    selector:
      app: ${APPLICATION_NAME}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    port:
      targetPort: 11222-tcp
    wildcardPolicy: None
parameters:
- displayName: Application Name
  description: The name for the application.
  name: APPLICATION_NAME
  value: datagrid
  required: true
- displayName: User account in base64
  description: User name to be created.
  name: USER
  value: 'YWRtaW4='
  required: true
- displayName: Password in base64
  description: Password for the user account.
  name: PASSWORD
  value: 'cGFzc3dvcmQ='
  required: true