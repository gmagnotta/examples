apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: hello-tomcat-pipeline
message: This is an OpenShift template to build hello-tomcat.
metadata:
  name: hello-tomcat-pipeline
  annotations:
    description: "hello-tomcat pipeline Template"
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: jws56-openjdk11-openshift-rhel8
  spec:
    lookupPolicy:
      local: true
    tags:
    - annotations:
        description: Red Hat JBoss WS 5.6 Image
      from:
        kind: DockerImage
        name: registry.redhat.io/jboss-webserver-5/jws56-openjdk11-openshift-rhel8
      name: latest
      referencePolicy:
        type: Local
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: hello-tomcat
  spec:
    lookupPolicy:
      local: true
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: hello-tomcat-artifact
  spec:
    lookupPolicy:
      local: true
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: hello-tomcat-artifact
    labels:
      application: hello-tomcat
  spec:
    resources: {}
    source:
      type: Git
      git:
        ref: master
        uri: 'https://github.com/gmagnotta/examples'
      contextDir: hello-tomcat
    strategy:
      type: Source
      sourceStrategy:
        forcePull: true
        incremental: true
        from:
          kind: ImageStreamTag
          name: 'jws56-openjdk11-openshift-rhel8:latest'
    postCommit: {}
    runPolicy: Serial
    output:
      to:
        kind: ImageStreamTag
        name: 'hello-tomcat-artifact:latest'
    triggers: []
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: hello-tomcat
    labels:
      application: hello-tomcat
  spec:
    resources: {}
    source:
      type: Dockerfile
      dockerfile: |-
        FROM jws56-openjdk11-openshift-rhel8:latest
        COPY /hello-tomcat.war /deployments/ROOT.war
      images:
      - from:
          kind: ImageStreamTag
          name: 'hello-tomcat-artifact:latest'
        paths:
        - sourcePath: '/deployments/hello-tomcat.war'
          destinationDir: '.'
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: 'jws56-openjdk11-openshift-rhel8:latest'
    postCommit: {}
    runPolicy: Serial
    output:
      to:
        kind: ImageStreamTag
        name: 'hello-tomcat:latest'
    triggers: []
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: hello-tomcat-pipelineconfig
  data:
    release-image-path: 'quay.io/gmagnotta/hello-tomcat'
- apiVersion: tekton.dev/v1beta1
  kind: Pipeline
  metadata:
    name: hello-tomcat
  spec:
    workspaces:
      - name: template
    tasks:
      - name: build
        taskRef:
          name: s2i-startbuild-cli
        params:
          - name: BUILDCONFIG-NAME
            value: "hello-tomcat-artifact"
      - name: build-runtime
        taskRef:
          name: s2i-startbuild-cli
        runAfter:
          - build
        params:
          - name: BUILDCONFIG-NAME
            value: "hello-tomcat"
      - name: deploy
        taskRef:
          name: openshift-actions
        runAfter:
          - build-runtime
        workspaces:
          - name: source
            workspace: template
        params:
          - name: SCRIPT
            value: |
              oc process -p IMAGE=$(tasks.build-runtime.results.VALUE) -p CAUSE="deployment" -f $(workspaces.source.path)/hello-tomcat-template.yaml | oc apply -f -
      - name: update-built-image
        taskRef:
          name: set-configmap-value
        runAfter:
          - deploy
        params:
          - name: CONFIGMAP-NAME
            value: "hello-tomcat-pipelineconfig"
          - name: CONFIGMAP-KEY
            value: "dev-latest-built-image"
          - name: VALUE
            value: $(tasks.build-runtime.results.VALUE)
- kind: RoleBinding
  apiVersion: rbac.authorization.k8s.io/v1
  metadata:
    name: 'system:image-puller'
    namespace: hello-dev
  subjects:
    - kind: ServiceAccount
      name: default
      namespace: hello-test
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: 'system:image-puller'
- apiVersion: tekton.dev/v1beta1
  kind: Pipeline
  metadata:
    name: hello-tomcat-promote
  spec:
    params:
      - name: dest-namespace
    workspaces:
      - name: template-deploy
    tasks:
      - name: get-image-built
        taskRef:
          name: get-configmap-value
        params:
          - name: CONFIGMAP-NAME
            value: "hello-tomcat-pipelineconfig"
          - name: CONFIGMAP-KEY
            value: "dev-latest-built-image"
      - name: deploy
        taskRef:
          name: openshift-actions
        runAfter:
          - get-image-built
        workspaces:
          - name: source
            workspace: template-deploy
        params:
          - name: SCRIPT
            value: |
              oc process -p IMAGE=$(tasks.get-image-built.results.VALUE) -p CAUSE=$(tasks.get-image-built.results.VALUE) -f $(workspaces.source.path)/hello-tomcat-template.yaml | oc apply --namespace=$(params.dest-namespace) -f - 
parameters: