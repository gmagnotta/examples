apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-uploader
  labels:
    app: image-uploader
spec:
  replicas: 1
  selector:
    matchLabels:
      app: image-uploader
  template:
    metadata:
      labels:
        app: image-uploader
    spec:
      containers:
        - name: image-uploader
          image: image-uploader
          env:
            - name: DNS_MEMBERSHIP_SERVICE_NAME
              value: "image-uploader-ping"
            - name: ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: image-uploader
                  key: s3-endpoint
            - name: ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: image-uploader
                  key: s3-accesskey
            - name: SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: image-uploader
                  key: s3-secretkey
            - name: BUCKET
              valueFrom:
                secretKeyRef:
                  name: image-uploader
                  key: s3-bucket
            - name: BACKEND_URL
              valueFrom:
                configMapKeyRef:
                  name: image-uploader
                  key: backend-url
          readinessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - 'curl --noproxy ''*'' -is ''http://localhost:8080/'' | head -1 | grep -iq ''HTTP/1.1 200'''
          livenessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - 'curl --noproxy ''*'' -is ''http://localhost:8080/health'' | grep -iq ''"status": "UP"'''
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
            - containerPort: 8888
              protocol: TCP
            - containerPort: 4000
              protocol: TCP
          resources:
            requests:
              cpu: "500m"
              memory: "128Mi"
            limits:
              cpu: "1000m"
              memory: "512Mi"
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: tomcat-users
            mountPath: /opt/jws-5.6/tomcat/conf/tomcat-users.xml
            subPath: tomcat-users.xml
          - name: server
            mountPath: /opt/jws-5.6/tomcat/conf/server.xml
            subPath: server.xml
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
        - name: tomcat-users
          configMap:
            name: image-uploader
            items:
            - key: tomcat-users.xml
              path: tomcat-users.xml
        - name: server
          configMap:
            name: image-uploader
            items:
            - key: server.xml
              path: server.xml
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600