apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: postgresql
message: This is a template to provision postgresql
metadata:
  name: postgresql
  annotations:
    description: "postgresql template"
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgresql-pvc
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: postgresql
  data:
    postgresql-max-prepared-transactions: ''
    postgresql-max-connections: ''
    postgresql-shared-buffers: ''
- apiVersion: v1
  kind: Secret
  metadata:
    name: postgresql
  data:
    postgresql-database: ${POSTGRESQL_DATABASE}
    postgresql-user: ${POSTGRESQL_USER}
    postgresql-password: ${POSTGRESQL_PASSWORD}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: postgresql-10
  spec:
    lookupPolicy:
      local: true
    tags:
    - from:
        kind: DockerImage
        name: registry.redhat.io/rhel8/postgresql-10
      name: latest
      referencePolicy:
        type: Source
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: postgresql
    labels:
      app: postgresql
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: postgresql
    template:
      metadata:
        labels:
          app: postgresql
        annotations:
          alpha.image.policy.openshift.io/resolve-names: '*'
      spec:
        volumes:
          - name: pgdata
            persistentVolumeClaim:
              claimName: postgresql-pvc
        containers:
          - name: postgresql
            image: postgresql-10:latest
            ports:
              - containerPort: 5432
                protocol: TCP
            env:
              - name: POSTGRESQL_USER
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: postgresql-user
              - name: POSTGRESQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: postgresql-password
              - name: POSTGRESQL_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: postgresql
                    key: postgresql-database
              - name: POSTGRESQL_MAX_CONNECTIONS
                valueFrom:
                  configMapKeyRef:
                    name: postgresql
                    key: postgresql-max-connections
              - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
                valueFrom:
                  configMapKeyRef:
                    name: postgresql
                    key: postgresql-max-prepared-transactions
              - name: POSTGRESQL_SHARED_BUFFERS
                valueFrom:
                  configMapKeyRef:
                    name: postgresql
                    key: postgresql-shared-buffers
            readinessProbe:
              timeoutSeconds: 10
              initialDelaySeconds: 90
              'successThreshold:': 1
              failureThreshold: 3
              exec:
                command:
                - "/bin/sh"
                - "-i"
                - "-c"
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            livenessProbe:
              timeoutSeconds: 10
              initialDelaySeconds: 90
              'successThreshold:': 1
              failureThreshold: 3
              tcpSocket:
                port: 5432
            volumeMounts:
              - mountPath: "/var/lib/pgsql/data"
                name: pgdata
            resources: {}
            imagePullPolicy: IfNotPresent
        restartPolicy: Always
        terminationGracePeriodSeconds: 60
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
    strategy:
      type: Recreate
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
- apiVersion: v1
  kind: Service
  metadata:
    name: postgresql
    labels:
      app: postgresql
  spec:
    ports:
      - name: 5432-tcp
        protocol: TCP
        port: 5432
        targetPort: 5432
    selector:
      app: postgresql
    type: ClusterIP
    sessionAffinity: None
parameters:
- displayName: Database Volume Capacity
  description: Size of persistent storage for database volume.
  name: VOLUME_CAPACITY
  value: 1Gi
  required: true
- displayName: Database name in base64
  description: The database name to create.
  name: POSTGRESQL_DATABASE
  value: 'ZGJ1c2Vy'
  required: true
- displayName: PostgreSQL account in base64
  description: User name for PostgreSQL account to be created.
  name: POSTGRESQL_USER
  value: 'ZGJ1c2Vy'
  required: true
- displayName: PostgreSQL password in base64
  description: Password for the user account.
  name: POSTGRESQL_PASSWORD
  value: 'ZGJ1c2VycGFzc3dvcmQ='
  required: true